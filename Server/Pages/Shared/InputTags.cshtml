@using System.Text.Json
@using System.Text.Json.Nodes
@model InputTags

@functions {
    JsonNode? NewTagsFor(IEnumerable<int> tag_ids)
    {
        return JsonSerializer.SerializeToNode(tag_ids);
    }
}

<div class="flex-grow flex flex-wrap items-center gap-2">
@foreach (var tag in Model.AllTags.Where(t=>Model.Tags.Any(it => t.Id == it.Id)))
{
    //bool hasTag = tag.Id % 2 == 1;
    string color = (tag.Id % 3) switch
    {
        0 => "red",
        1 => "green",
        2 => "blue",
        _ => "gray" // Default case
    };
    
    <span class="inline-flex items-center px-6 h-12 rounded-full text-sm font-medium bg-@color-100 text-@color-800">
        @tag.Name
        <form method="post" action="@Model.Endpoint" class="inline-flex items-center ml-1.5">
            <input type="hidden" name="tagData" value='{"remove_tag":@tag.Id,"new_tags":@NewTagsFor(Model.Tags.Select(t=>t.Id).Except([tag.Id]))}'/>
            <button type="submit" class="text-@color-400 hover:text-@color-600 focus:outline-none">
                <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                </svg>
            </button>
        </form>
    </span>
}

@{
    var availableTags = Model.AllTags.Where(t => Model.Tags.All(it => it.Id != t.Id)).ToArray();
    
    if (availableTags.Length > 0)
    {
        <span class="inline-flex items-center px-6 h-12 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
        <div class="flex items-center space-x-2">
            <form method="post" action="@Model.Endpoint">
                <button type="submit" class="px-2 py-1 bg-indigo-100 text-indigo-700 rounded hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 text-sm">
                    Add:
                </button>
                <select name="tagData" class="text-sm border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                    <option value="">Select tag</option>
                    @foreach (var tag in availableTags)
                    {
                        var json = new JsonObject() { ["add_tag"] = tag.Id, ["new_tags"] = NewTagsFor(Model.Tags.Select(t=>t.Id).Append(tag.Id)) };
                        <option value="@JsonSerializer.Serialize(json)">@tag.Name</option>
                    }
                </select>
            </form>
        </div>
        </span>
    }
}
    
</div>