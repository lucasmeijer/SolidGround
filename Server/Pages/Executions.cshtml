@page
@model SolidGround.Pages.ExecutionsModel
@{
ViewData["Title"] = "Executions";
}

<div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6">Executions</h1>

    <div class="overflow-x-auto bg-white shadow-md rounded-lg">
        <table class="min-w-full table-auto">
            <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Start Time</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Outputs Count</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reference</th>
            </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var execution in Model.Executions)
            {
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 cursor-pointer" onclick="window.location='/Executions/@execution.Id'">@execution.Id</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 cursor-pointer" onclick="window.location='/Executions/@execution.Id'">@execution.StartTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 cursor-pointer" onclick="window.location='/Executions/@execution.Id'">@execution.Outputs.Count</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        <button onclick="toggleReference(@execution.Id, @execution.IsReference.ToString().ToLower())"
                                class="w-40 px-3 py-1 rounded text-white @(execution.IsReference ? "bg-red-500 hover:bg-red-600" : "bg-blue-500 hover:bg-blue-600")">
                            <span class="block truncate">
                                @(execution.IsReference ? "Remove Reference" : "Add Reference")
                            </span>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <nav class="mt-4">
        <ul class="flex justify-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="mx-1">
                    <a class="px-3 py-2 @(i == Model.CurrentPage ? "bg-blue-500 text-white" : "bg-white text-blue-500") border border-blue-500 rounded hover:bg-blue-500 hover:text-white"
                       asp-page="./Executions"
                       asp-route-currentPage="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    function toggleReference(id, isReference) {
        const endpoint = `/api/executions/${id}`;
        const newReferenceStatus = !isReference;

        fetch(endpoint, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ isReference: newReferenceStatus })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Refresh the page to show updated data
                location.reload();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('An error occurred while updating the reference status.');
            });
    }
</script>

